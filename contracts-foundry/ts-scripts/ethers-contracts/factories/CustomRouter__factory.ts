/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CustomRouter, CustomRouterInterface } from "../CustomRouter";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_router",
        type: "address",
        internalType: "address",
      },
      {
        name: "_link",
        type: "address",
        internalType: "address",
      },
      {
        name: "_controller",
        type: "address",
        internalType: "address",
      },
      {
        name: "_controllerVault",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_controllerChainSelector",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "acceptOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "controller",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "controllerChainSelector",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "controllerVault",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "depositToFeeTank",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "feeTank",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "generateKey",
    inputs: [
      {
        name: "requestHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "fixedNonce",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "operationType",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "payFeesIn",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "linkToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract LinkTokenInterface",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "messageIdToTokenAmount",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteCrossChainMessage",
    inputs: [
      {
        name: "targetChain",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "payFeesIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "includeToken",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "tokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "cost",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerAdmin",
    inputs: [
      {
        name: "admin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "router",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IRouterClient",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "routerAdmins",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setController",
    inputs: [
      {
        name: "_controller",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setControllerChainSelector",
    inputs: [
      {
        name: "_controllerChainSelector",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setControllerVault",
    inputs: [
      {
        name: "_controllerVault",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "submitReceipt",
    inputs: [
      {
        name: "reqeustMessageId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "idempotencyKey",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "usedTokens",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "payFeesIn",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "token",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawFromFeeTank",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferRequested",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceiptProcessed",
    inputs: [
      {
        name: "receiptMessageId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "idempotencyKey",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "usedTokens",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RequestProcessed",
    inputs: [
      {
        name: "messageId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "payFeesIn",
        type: "uint8",
        indexed: false,
        internalType: "enum ProxyAIRouter.PayFeesIn",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200237b3803806200237b833981016040819052620000349162000201565b8585858585853380600081620000915760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615620000c457620000c48162000139565b5050506001600160a01b0395861660805293851660a052600280549386166001600160a01b0319948516179055600380549286169290931691909117909155600480546001600160401b03909316600160a01b026001600160e01b031990931691909316171790555062000292945050505050565b336001600160a01b03821603620001935760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640162000088565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80516001600160a01b0381168114620001fc57600080fd5b919050565b60008060008060008060c087890312156200021b57600080fd5b6200022687620001e4565b95506200023660208801620001e4565b94506200024660408801620001e4565b93506200025660608801620001e4565b92506200026660808801620001e4565b60a08801519092506001600160401b03811681146200028457600080fd5b809150509295509295509295565b60805160a05161204c6200032f600039600081816102730152818161060b01528181610d2701528181610e4b01528181610f4e0152818161135501528181611479015261157c0152600081816104010152818161066f01528181610d8a01528181610f1f01528181610ff301528181611046015281816110f1015281816113b80152818161154d0152818161163d01526116e8015261204c6000f3fe60806040526004361061012e5760003560e01c80638da5cb5b116100ab578063e88fdbe41161006f578063e88fdbe41461039c578063f2fde38b146103af578063f77c4791146103cf578063f887ea40146103ef578063faccafe914610423578063fc0c546a1461044357600080fd5b80638da5cb5b146102ea5780638ee55c4d1461030857806392eefe9b14610349578063b47b76e314610369578063c38c58131461037c57600080fd5b806352dabd0a116100f257806352dabd0a1461021457806355a15a101461023457806357970e931461026157806379ba5097146102955780638a147a6f146102aa57600080fd5b806312f6c0ac1461013a5780631b62799b1461015c578063211485771461018f57806336050539146101af578063510cd61c146101e757600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061015a610155366004611c9a565b610463565b005b34801561016857600080fd5b5061017c610177366004611cca565b610499565b6040519081526020015b60405180910390f35b34801561019b57600080fd5b5061015a6101aa366004611d10565b6106f2565b3480156101bb57600080fd5b506003546101cf906001600160a01b031681565b6040516001600160a01b039091168152602001610186565b3480156101f357600080fd5b5061017c610202366004611d10565b60056020526000908152604090205481565b34801561022057600080fd5b5061015a61022f366004611d39565b61071c565b34801561024057600080fd5b5061017c61024f366004611d39565b60076020526000908152604090205481565b34801561026d57600080fd5b506101cf7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102a157600080fd5b5061015a6107b8565b3480156102b657600080fd5b506102da6102c5366004611d10565b60066020526000908152604090205460ff1681565b6040519015158152602001610186565b3480156102f657600080fd5b506000546001600160a01b03166101cf565b34801561031457600080fd5b5060045461033090600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610186565b34801561035557600080fd5b5061015a610364366004611d10565b610862565b61015a610377366004611d52565b61088c565b34801561038857600080fd5b5061015a610397366004611d10565b6108af565b61017c6103aa366004611d52565b6108db565b3480156103bb57600080fd5b5061015a6103ca366004611d10565b610905565b3480156103db57600080fd5b506002546101cf906001600160a01b031681565b3480156103fb57600080fd5b506101cf7f000000000000000000000000000000000000000000000000000000000000000081565b34801561042f57600080fd5b5061015a61043e366004611d39565b610916565b34801561044f57600080fd5b506004546101cf906001600160a01b031681565b61046b610a06565b6004805467ffffffffffffffff909216600160a01b0267ffffffffffffffff60a01b19909216919091179055565b6000606083156105245760408051600180825281830190925290816020015b60408051808201909152600080825260208201528152602001906001900390816104b8575050604080518082019091526004546001600160a01b0316815260208101859052815191925090829060009061051457610514611d84565b6020026020010181905250610565565b6040805160008082526020820190925290610561565b604080518082019091526000808252602082015281526020019060019003908161053a5790505b5090505b60006040518060a0016040528086610588576002546001600160a01b0316610595565b6003546001600160a01b03165b604080516001600160a01b039290921660208084019190915281518084038201815292820182529183528051600081528083018252918301919091528101849052606001600188818111156105ec576105ec611d9a565b60018111156105fd576105fd611d9a565b1461060957600061062b565b7f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b0316815260200161065360405180602001604052806203d090815250610a5b565b90526040516320487ded60e01b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906320487ded906106a6908a908590600401611e00565b602060405180830381865afa1580156106c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e79190611eda565b979650505050505050565b6106fa610a06565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526006602052604090205460ff166107795760405162461bcd60e51b815260206004820152601660248201527513db9b1e4818591b5a5b8818d85b8819195c1bdcda5d60521b60448201526064015b60405180910390fd5b3360009081526005602052604081208054839290610798908490611f09565b90915550506004546107b5906001600160a01b0316333084610a98565b50565b6001546001600160a01b0316331461080b5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b6044820152606401610770565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b61086a610a06565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6108a98484848460018111156108a4576108a4611d9a565b610b03565b50505050565b6108b7610a06565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b60006108fa8585858560018111156108f5576108f5611d9a565b6111ae565b90505b949350505050565b61090d610a06565b6107b5816117a6565b3360009081526006602052604090205460ff166109755760405162461bcd60e51b815260206004820152601760248201527f4f6e6c792061646d696e2063616e2077697468647261770000000000000000006044820152606401610770565b336000908152600560205260409020548111156109cb5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e74207265736572766560601b6044820152606401610770565b33600090815260056020526040812080548392906109ea908490611f22565b90915550506004546107b5906001600160a01b0316338361184f565b6000546001600160a01b03163314610a595760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b6044820152606401610770565b565b60408051915160248084019190915281518084039091018152604490920190526020810180516001600160e01b03166397a657c960e01b17905290565b6040516001600160a01b03808516602483015283166044820152606481018290526108a99085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611884565b60008481526007602052604090205480610b695760405162461bcd60e51b815260206004820152602160248201527f4e6f20746f6b656e732068656c6420666f722074686973206d657373616765496044820152601960fa1b6064820152608401610770565b80831115610bc35760405162461bcd60e51b815260206004820152602160248201527f5573656420746f6b656e732063616e6e6f7420657863656564206d61782066656044820152606560f81b6064820152608401610770565b6000610bcf8483611f22565b90508015610bfc573360009081526005602052604081208054839290610bf6908490611f09565b90915550505b604080516001808252818301909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081610c13575050604080518082019091526004546001600160a01b03168152602081018790528151919250908290600090610c6f57610c6f611d84565b6020908102919091018101919091526004546040805130938101939093528201899052606082018890526001600160a01b0316608082015260a0810186905260009060c00160408051808303601f1901815260a083019091526003546001600160a01b031660c083015291506000908060e0810160408051601f198184030181529181529082526020820185905281018590526060016001886001811115610d1957610d19611d9a565b14610d25576000610d47565b7f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b03168152602001610d6f60405180602001604052806203d090815250610a5b565b9052600480546040516320487ded60e01b81529293506000927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316926320487ded92610dd892600160a01b90910467ffffffffffffffff1691879101611e00565b602060405180830381865afa158015610df5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e199190611eda565b90506001876001811115610e2f57610e2f611d9a565b03610fc1576040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610e9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebe9190611eda565b1015610f085760405162461bcd60e51b8152602060048201526019602482015278496e73756666696369656e74204c494e4b2062616c616e636560381b6044820152606401610770565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015610f97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbb9190611f35565b50610fe1565b80341015610fe15760405162461bcd60e51b815260040161077090611f52565b600454611018906001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000008a611956565b6000600188600181111561102e5761102e611d9a565b036110de57600480546040516396f4e9f960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316926396f4e9f99261109492600160a01b90910467ffffffffffffffff1691889101611e00565b6020604051808303816000875af11580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d79190611eda565b9050611187565b600480546040516396f4e9f960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316926396f4e9f992869261114192600160a01b90920467ffffffffffffffff1691899101611e00565b60206040518083038185885af115801561115f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906111849190611eda565b90505b60008b8152600760205260408120556111a1818b8b611a6b565b5050505050505050505050565b6040805133602082015290810185905260608101839052608081018490526000908190819060a00160408051601f19818403018152908290526111f49291602001611fb2565b6040516020818303038152906040529050600061122185600281111561121c5761121c611d9a565b611aab565b336000908152600560205260409020549091508111156112925760405162461bcd60e51b815260206004820152602660248201527f496e73756666696369656e7420746f6b656e20666f7220736572766963652070604482015265185e5b595b9d60d21b6064820152608401610770565b33600090815260056020526040812080548392906112b1908490611f22565b90915550506040805160a0810182526002546001600160a01b031660c0808301919091528251808303909101815260e0820183528152602080820185905282516000808252918101845290928201908361132d565b60408051808201909152600080825260208201528152602001906001900390816113065790505b508152602001600187600181111561134757611347611d9a565b14611353576000611375565b7f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b0316815260200161139d60405180602001604052806203d090815250610a5b565b9052600480546040516320487ded60e01b81529293506000927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316926320487ded9261140692600160a01b90910467ffffffffffffffff1691879101611e00565b602060405180830381865afa158015611423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114479190611eda565b9050600186600181111561145d5761145d611d9a565b036115ef576040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156114c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ec9190611eda565b10156115365760405162461bcd60e51b8152602060048201526019602482015278496e73756666696369656e74204c494e4b2062616c616e636560381b6044820152606401610770565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156115c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e99190611f35565b5061160f565b8034101561160f5760405162461bcd60e51b815260040161077090611f52565b6000600187600181111561162557611625611d9a565b036116d557600480546040516396f4e9f960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316926396f4e9f99261168b92600160a01b90910467ffffffffffffffff1691889101611e00565b6020604051808303816000875af11580156116aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ce9190611eda565b905061177e565b600480546040516396f4e9f960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316926396f4e9f992869261173892600160a01b90920467ffffffffffffffff1691899101611e00565b60206040518083038185885af1158015611756573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061177b9190611eda565b90505b60008181526007602052604090208490556117998188611b2e565b9998505050505050505050565b336001600160a01b038216036117fe5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c660000000000000000006044820152606401610770565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6040516001600160a01b03831660248201526044810182905261187f90849063a9059cbb60e01b90606401610acc565b505050565b60006118d9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611b6a9092919063ffffffff16565b80519091501561187f57808060200190518101906118f79190611f35565b61187f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610770565b8015806119d05750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156119aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ce9190611eda565b155b611a3b5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610770565b6040516001600160a01b03831660248201526044810182905261187f90849063095ea7b360e01b90606401610acc565b81837f3472c324864d9ac03ed5f12b363f0175c178e0d4bf61b6a445dad02296f9a25c83604051611a9e91815260200190565b60405180910390a3505050565b600080826002811115611ac057611ac0611d9a565b03611ad45750678ac7230489e80000919050565b6001826002811115611ae857611ae8611d9a565b03611afd575068056bc75e2d63100000919050565b6002826002811115611b1157611b11611d9a565b03611b265750680ad78ebc5ac6200000919050565b506000919050565b817f221f639e25eed766534e8f5310bf882a3b19c95c419aa54f8387214debd0b75782604051611b5e9190611fd4565b60405180910390a25050565b60606108fd848460008585600080866001600160a01b03168587604051611b919190611fe7565b60006040518083038185875af1925050503d8060008114611bce576040519150601f19603f3d011682016040523d82523d6000602084013e611bd3565b606091505b50915091506106e78783838760608315611c4e578251600003611c47576001600160a01b0385163b611c475760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610770565b50816108fd565b6108fd8383815115611c635781518083602001fd5b8060405162461bcd60e51b81526004016107709190612003565b803567ffffffffffffffff81168114611c9557600080fd5b919050565b600060208284031215611cac57600080fd5b611cb582611c7d565b9392505050565b80151581146107b557600080fd5b60008060008060808587031215611ce057600080fd5b611ce985611c7d565b9350602085013592506040850135611d0081611cbc565b9396929550929360600135925050565b600060208284031215611d2257600080fd5b81356001600160a01b0381168114611cb557600080fd5b600060208284031215611d4b57600080fd5b5035919050565b60008060008060808587031215611d6857600080fd5b5050823594602084013594506040840135936060013592509050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60005b83811015611dcb578181015183820152602001611db3565b50506000910152565b60008151808452611dec816020860160208601611db0565b601f01601f19169290920160200192915050565b6000604067ffffffffffffffff8516835260208181850152845160a083860152611e2d60e0860182611dd4565b905081860151603f1980878403016060880152611e4a8383611dd4565b88860151888203830160808a01528051808352908601945060009350908501905b80841015611e9d57845180516001600160a01b0316835286015186830152938501936001939093019290860190611e6b565b5060608901516001600160a01b031660a08901526080890151888203830160c08a01529550611ecc8187611dd4565b9a9950505050505050505050565b600060208284031215611eec57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611f1c57611f1c611ef3565b92915050565b81810381811115611f1c57611f1c611ef3565b600060208284031215611f4757600080fd5b8151611cb581611cbc565b60208082526022908201527f496e73756666696369656e74206e617469766520746f6b656e20666f72206665604082015261657360f01b606082015260800190565b600281106107b557634e487b7160e01b600052602160045260246000fd5b611fbb83611f94565b8281526040602082015260006108fd6040830184611dd4565b60208101611fe183611f94565b91905290565b60008251611ff9818460208701611db0565b9190910192915050565b602081526000611cb56020830184611dd456fea26469706673582212202d54a5f45b454edfda08280404510d7481bf344acbbcb453c67a0d3024312ae164736f6c63430008130033";

type CustomRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomRouter__factory extends ContractFactory {
  constructor(...args: CustomRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: string,
    _link: string,
    _controller: string,
    _controllerVault: string,
    _token: string,
    _controllerChainSelector: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<CustomRouter> {
    return super.deploy(
      _router,
      _link,
      _controller,
      _controllerVault,
      _token,
      _controllerChainSelector,
      overrides || {}
    ) as Promise<CustomRouter>;
  }
  override getDeployTransaction(
    _router: string,
    _link: string,
    _controller: string,
    _controllerVault: string,
    _token: string,
    _controllerChainSelector: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _link,
      _controller,
      _controllerVault,
      _token,
      _controllerChainSelector,
      overrides || {}
    );
  }
  override attach(address: string): CustomRouter {
    return super.attach(address) as CustomRouter;
  }
  override connect(signer: Signer): CustomRouter__factory {
    return super.connect(signer) as CustomRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomRouterInterface {
    return new utils.Interface(_abi) as CustomRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CustomRouter {
    return new Contract(address, _abi, signerOrProvider) as CustomRouter;
  }
}
