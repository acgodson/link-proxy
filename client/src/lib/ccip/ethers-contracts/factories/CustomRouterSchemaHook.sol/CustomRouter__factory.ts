/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CustomRouter,
  CustomRouterInterface,
} from "../../CustomRouterSchemaHook.sol/CustomRouter";

const _abi = [
  {
    type: "function",
    name: "submitReceipt",
    inputs: [
      {
        name: "messageId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "idempotencyKey",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "payFeesIn",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060a78061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063b47b76e314602d575b600080fd5b603e60383660046040565b50505050565b005b60008060008060808587031215605557600080fd5b505082359460208401359450604084013593606001359250905056fea264697066735822122035f4a9618cec882744be9ab8a77c42504b023eb8e27378e06a72b7fff1c569b164736f6c63430008140033";

type CustomRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomRouter__factory extends ContractFactory {
  constructor(...args: CustomRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<CustomRouter> {
    return super.deploy(overrides || {}) as Promise<CustomRouter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CustomRouter {
    return super.attach(address) as CustomRouter;
  }
  override connect(signer: Signer): CustomRouter__factory {
    return super.connect(signer) as CustomRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomRouterInterface {
    return new utils.Interface(_abi) as CustomRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CustomRouter {
    return new Contract(address, _abi, signerOrProvider) as CustomRouter;
  }
}
