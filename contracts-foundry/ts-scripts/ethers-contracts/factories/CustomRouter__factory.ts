/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CustomRouter, CustomRouterInterface } from "../CustomRouter";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_router",
        type: "address",
        internalType: "address",
      },
      {
        name: "_link",
        type: "address",
        internalType: "address",
      },
      {
        name: "_controller",
        type: "address",
        internalType: "address",
      },
      {
        name: "_controllerVault",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_controllerChainSelector",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "controller",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "controllerChainSelector",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "controllerVault",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "depositToFeeTank",
    inputs: [
      {
        name: "admin",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "feeTank",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "generateKey",
    inputs: [
      {
        name: "requestHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "fixedNonce",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "operationType",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "payFeesIn",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "linkToken",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract LinkTokenInterface",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "messageIdToTokenAmount",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "quoteCrossChainMessage",
    inputs: [
      {
        name: "targetChain",
        type: "uint64",
        internalType: "uint64",
      },
      {
        name: "payFeesIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "includeToken",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "tokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "cost",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerAdmin",
    inputs: [
      {
        name: "admin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "router",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IRouterClient",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "routerAdmins",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setController",
    inputs: [
      {
        name: "_controller",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setControllerChainSelector",
    inputs: [
      {
        name: "_controllerChainSelector",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setControllerVault",
    inputs: [
      {
        name: "_controllerVault",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "submitReceipt",
    inputs: [
      {
        name: "reqeustMessageId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "idempotencyKey",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "usedTokens",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "payFeesIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "token",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "withdrawFromFeeTank",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "ReceiptProcessed",
    inputs: [
      {
        name: "receiptMessageId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "idempotencyKey",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "usedTokens",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RequestProcessed",
    inputs: [
      {
        name: "messageId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "expectedIdempotencyKey",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "payFeesIn",
        type: "uint8",
        indexed: false,
        internalType: "enum ProxyAIRouter.PayFeesIn",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620020de380380620020de8339810160408190526200003491620000bf565b6001600160a01b0395861660805293851660a052600080549386166001600160a01b0319948516179055600180549286169290931691909117909155600280546001600160401b03909316600160a01b026001600160e01b0319909316939091169290921717905562000150565b80516001600160a01b0381168114620000ba57600080fd5b919050565b60008060008060008060c08789031215620000d957600080fd5b620000e487620000a2565b9550620000f460208801620000a2565b94506200010460408801620000a2565b93506200011460608801620000a2565b92506200012460808801620000a2565b60a08801519092506001600160401b03811681146200014257600080fd5b809150509295509295509295565b60805160a051611ef1620001ed6000396000818161028b015281816105f801528181610adc01528181610c0001528181610d030152818161117e015281816112a201526113a50152600081816104240152818161065c01528181610b3e01528181610cd401528181610da801528181610dfa01528181610ea5015281816111e00152818161137601528181611463015261150e0152611ef16000f3fe60806040526004361061010d5760003560e01c80638ee55c4d11610095578063e88fdbe411610064578063e88fdbe4146103ca578063f77c4791146103f2578063f887ea4014610412578063faccafe914610446578063fc0c546a1461046657600080fd5b80638ee55c4d146102ed57806392eefe9b1461032e578063c38c58131461036b578063ce67dae2146103aa57600080fd5b806336050539116100dc57806336050539146101e7578063510cd61c1461021f57806355a15a101461024c57806357970e93146102795780638a147a6f146102ad57600080fd5b806312f6c0ac146101195780631b62799b1461016457806321148577146101975780632801c61b146101d457600080fd5b3661011457005b600080fd5b34801561012557600080fd5b50610162610134366004611ac3565b6002805467ffffffffffffffff909216600160a01b0267ffffffffffffffff60a01b19909216919091179055565b005b34801561017057600080fd5b5061018461017f366004611af3565b610486565b6040519081526020015b60405180910390f35b3480156101a357600080fd5b506101626101b2366004611b50565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6101626101e2366004611b6b565b6106df565b3480156101f357600080fd5b50600154610207906001600160a01b031681565b6040516001600160a01b03909116815260200161018e565b34801561022b57600080fd5b5061018461023a366004611b50565b60036020526000908152604090205481565b34801561025857600080fd5b50610184610267366004611bb4565b60056020526000908152604090205481565b34801561028557600080fd5b506102077f000000000000000000000000000000000000000000000000000000000000000081565b3480156102b957600080fd5b506102dd6102c8366004611b50565b60046020526000908152604090205460ff1681565b604051901515815260200161018e565b3480156102f957600080fd5b5060025461031590600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff909116815260200161018e565b34801561033a57600080fd5b50610162610349366004611b50565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b34801561037757600080fd5b50610162610386366004611b50565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b3480156103b657600080fd5b506101626103c5366004611bcd565b610704565b6103dd6103d8366004611bf7565b61074d565b6040805192835260208301919091520161018e565b3480156103fe57600080fd5b50600054610207906001600160a01b031681565b34801561041e57600080fd5b506102077f000000000000000000000000000000000000000000000000000000000000000081565b34801561045257600080fd5b50610162610461366004611bb4565b61077a565b34801561047257600080fd5b50600254610207906001600160a01b031681565b6000606083156105115760408051600180825281830190925290816020015b60408051808201909152600080825260208201528152602001906001900390816104a5575050604080518082019091526002546001600160a01b0316815260208101859052815191925090829060009061050157610501611c29565b6020026020010181905250610552565b604080516000808252602082019092529061054e565b60408051808201909152600080825260208201528152602001906001900390816105275790505b5090505b60006040518060a0016040528086610575576000546001600160a01b0316610582565b6001546001600160a01b03165b604080516001600160a01b039290921660208084019190915281518084038201815292820182529183528051600081528083018252918301919091528101849052606001600188818111156105d9576105d9611c3f565b60018111156105ea576105ea611c3f565b146105f6576000610618565b7f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b0316815260200161064060405180602001604052806203d090815250610872565b90526040516320487ded60e01b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906320487ded90610693908a908590600401611ca5565b602060405180830381865afa1580156106b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d49190611d7f565b979650505050505050565b6106fd8585858560018111156106f7576106f7611c3f565b856108af565b5050505050565b6001600160a01b0382166000908152600360205260408120805483929061072c908490611dae565b9091555050600254610749906001600160a01b0316333084610f65565b5050565b60008061076d86868686600181111561076857610768611c3f565b610fd6565b9150915094509492505050565b3360009081526004602052604090205460ff166107de5760405162461bcd60e51b815260206004820152601760248201527f4f6e6c792061646d696e2063616e20776974686472617700000000000000000060448201526064015b60405180910390fd5b336000908152600360205260409020548111156108345760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e74207265736572766560601b60448201526064016107d5565b3360009081526003602052604081208054839290610853908490611dc7565b909155505060025461086f906001600160a01b03163383611618565b50565b60408051915160248084019190915281518084039091018152604490920190526020810180516001600160e01b03166397a657c960e01b17905290565b600085815260056020526040902054806109155760405162461bcd60e51b815260206004820152602160248201527f4e6f20746f6b656e732068656c6420666f722074686973206d657373616765496044820152601960fa1b60648201526084016107d5565b8084111561096f5760405162461bcd60e51b815260206004820152602160248201527f5573656420746f6b656e732063616e6e6f7420657863656564206d61782066656044820152606560f81b60648201526084016107d5565b600061097b8583611dc7565b905080156109b1576001600160a01b038316600090815260036020526040812080548392906109ab908490611dae565b90915550505b604080516001808252818301909252600091816020015b60408051808201909152600080825260208201528152602001906001900390816109c8575050604080518082019091526002546001600160a01b03168152602081018890528151919250908290600090610a2457610a24611c29565b60209081029190910181019190915260025460408051309381019390935282018a9052606082018990526001600160a01b0316608082015260a0810187905260009060c00160408051808303601f1901815260a083019091526001546001600160a01b031660c083015291506000908060e0810160408051601f198184030181529181529082526020820185905281018590526060016001896001811115610ace57610ace611c3f565b14610ada576000610afc565b7f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b03168152602001610b2460405180602001604052806203d090815250610872565b90526002546040516320487ded60e01b81529192506000917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916320487ded91610b8d91600160a01b900467ffffffffffffffff16908690600401611ca5565b602060405180830381865afa158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce9190611d7f565b90506001886001811115610be457610be4611c3f565b03610d76576040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c739190611d7f565b1015610cbd5760405162461bcd60e51b8152602060048201526019602482015278496e73756666696369656e74204c494e4b2062616c616e636560381b60448201526064016107d5565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015610d4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d709190611dda565b50610d96565b80341015610d965760405162461bcd60e51b81526004016107d590611df7565b600254610dcd906001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000008b61164d565b60006001896001811115610de357610de3611c3f565b03610e93576002546040516396f4e9f960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916396f4e9f991610e4991600160a01b900467ffffffffffffffff16908790600401611ca5565b6020604051808303816000875af1158015610e68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8c9190611d7f565b9050610f3d565b6002546040516396f4e9f960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916396f4e9f9918591610ef791600160a01b90910467ffffffffffffffff16908890600401611ca5565b60206040518083038185885af1158015610f15573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610f3a9190611d7f565b90505b60008c815260056020526040812055610f57818c8c611762565b505050505050505050505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610fd09085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526117a2565b50505050565b60408051306020820152908101859052606081018390526080810184905260009081908190819060a00160408051601f198184030181529082905261101e9291602001611e57565b6040516020818303038152906040529050600061104b86600281111561104657611046611c3f565b611874565b336000908152600360205260409020549091508111156110bc5760405162461bcd60e51b815260206004820152602660248201527f496e73756666696369656e7420746f6b656e20666f7220736572766963652070604482015265185e5b595b9d60d21b60648201526084016107d5565b33600090815260036020526040812080548392906110db908490611dc7565b90915550506040805160a081018252600080546001600160a01b031660c0808401919091528351808403909101815260e0830184528252602080830186905283518281529081018452909282019083611156565b604080518082019091526000808252602082015281526020019060019003908161112f5790505b508152602001600188600181111561117057611170611c3f565b1461117c57600061119e565b7f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b031681526020016111c660405180602001604052806203d090815250610872565b90526002546040516320487ded60e01b81529192506000917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916320487ded9161122f91600160a01b900467ffffffffffffffff16908690600401611ca5565b602060405180830381865afa15801561124c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112709190611d7f565b9050600187600181111561128657611286611c3f565b03611418576040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156112f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113159190611d7f565b101561135f5760405162461bcd60e51b8152602060048201526019602482015278496e73756666696369656e74204c494e4b2062616c616e636560381b60448201526064016107d5565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156113ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114129190611dda565b50611438565b803410156114385760405162461bcd60e51b81526004016107d590611df7565b600187600181111561144c5761144c611c3f565b036114fc576002546040516396f4e9f960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916396f4e9f9916114b291600160a01b900467ffffffffffffffff16908690600401611ca5565b6020604051808303816000875af11580156114d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f59190611d7f565b95506115a6565b6002546040516396f4e9f960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916396f4e9f991849161156091600160a01b90910467ffffffffffffffff16908790600401611ca5565b60206040518083038185885af115801561157e573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906115a39190611d7f565b95505b60008681526005602090815260409182902085905590516bffffffffffffffffffffffff193060601b1691810191909152603481018b9052605481018a905260740160405160208183030381529060405280519060200120945061160b8686896118f5565b5050505094509492505050565b6040516001600160a01b03831660248201526044810182905261164890849063a9059cbb60e01b90606401610f99565b505050565b8015806116c75750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156116a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c59190611d7f565b155b6117325760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016107d5565b6040516001600160a01b03831660248201526044810182905261164890849063095ea7b360e01b90606401610f99565b81837f3472c324864d9ac03ed5f12b363f0175c178e0d4bf61b6a445dad02296f9a25c8360405161179591815260200190565b60405180910390a3505050565b60006117f7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119269092919063ffffffff16565b80519091501561164857808060200190518101906118159190611dda565b6116485760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016107d5565b60008082600281111561188957611889611c3f565b0361189d5750670de0b6b3a7640000919050565b60018260028111156118b1576118b1611c3f565b036118c55750671bc16d674ec80000919050565b60028260028111156118d9576118d9611c3f565b036118ed5750673782dace9d900000919050565b506000919050565b81837f2090b227eceabdd08e26957fc5224f002c8a1fd3161880af69444331b8b0ba8a836040516117959190611e79565b6060611935848460008561193d565b949350505050565b60608247101561199e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016107d5565b600080866001600160a01b031685876040516119ba9190611e8c565b60006040518083038185875af1925050503d80600081146119f7576040519150601f19603f3d011682016040523d82523d6000602084013e6119fc565b606091505b50915091506106d48783838760608315611a77578251600003611a70576001600160a01b0385163b611a705760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107d5565b5081611935565b6119358383815115611a8c5781518083602001fd5b8060405162461bcd60e51b81526004016107d59190611ea8565b803567ffffffffffffffff81168114611abe57600080fd5b919050565b600060208284031215611ad557600080fd5b611ade82611aa6565b9392505050565b801515811461086f57600080fd5b60008060008060808587031215611b0957600080fd5b611b1285611aa6565b9350602085013592506040850135611b2981611ae5565b9396929550929360600135925050565b80356001600160a01b0381168114611abe57600080fd5b600060208284031215611b6257600080fd5b611ade82611b39565b600080600080600060a08688031215611b8357600080fd5b85359450602086013593506040860135925060608601359150611ba860808701611b39565b90509295509295909350565b600060208284031215611bc657600080fd5b5035919050565b60008060408385031215611be057600080fd5b611be983611b39565b946020939093013593505050565b60008060008060808587031215611c0d57600080fd5b5050823594602084013594506040840135936060013592509050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60005b83811015611c70578181015183820152602001611c58565b50506000910152565b60008151808452611c91816020860160208601611c55565b601f01601f19169290920160200192915050565b6000604067ffffffffffffffff8516835260208181850152845160a083860152611cd260e0860182611c79565b905081860151603f1980878403016060880152611cef8383611c79565b88860151888203830160808a01528051808352908601945060009350908501905b80841015611d4257845180516001600160a01b0316835286015186830152938501936001939093019290860190611d10565b5060608901516001600160a01b031660a08901526080890151888203830160c08a01529550611d718187611c79565b9a9950505050505050505050565b600060208284031215611d9157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611dc157611dc1611d98565b92915050565b81810381811115611dc157611dc1611d98565b600060208284031215611dec57600080fd5b8151611ade81611ae5565b60208082526022908201527f496e73756666696369656e74206e617469766520746f6b656e20666f72206665604082015261657360f01b606082015260800190565b6002811061086f57634e487b7160e01b600052602160045260246000fd5b611e6083611e39565b8281526040602082015260006119356040830184611c79565b60208101611e8683611e39565b91905290565b60008251611e9e818460208701611c55565b9190910192915050565b602081526000611ade6020830184611c7956fea2646970667358221220a30480724d59772ed83d06d452d8e3b8aa9510344a9f5b3b27dcab78eb6319f264736f6c63430008140033";

type CustomRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomRouter__factory extends ContractFactory {
  constructor(...args: CustomRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: string,
    _link: string,
    _controller: string,
    _controllerVault: string,
    _token: string,
    _controllerChainSelector: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<CustomRouter> {
    return super.deploy(
      _router,
      _link,
      _controller,
      _controllerVault,
      _token,
      _controllerChainSelector,
      overrides || {}
    ) as Promise<CustomRouter>;
  }
  override getDeployTransaction(
    _router: string,
    _link: string,
    _controller: string,
    _controllerVault: string,
    _token: string,
    _controllerChainSelector: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _link,
      _controller,
      _controllerVault,
      _token,
      _controllerChainSelector,
      overrides || {}
    );
  }
  override attach(address: string): CustomRouter {
    return super.attach(address) as CustomRouter;
  }
  override connect(signer: Signer): CustomRouter__factory {
    return super.connect(signer) as CustomRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomRouterInterface {
    return new utils.Interface(_abi) as CustomRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CustomRouter {
    return new Contract(address, _abi, signerOrProvider) as CustomRouter;
  }
}
